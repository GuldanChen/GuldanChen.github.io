<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>技术和生活</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-12T09:40:20.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>GuldanChen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>dubbo spi特性</title>
    <link href="http://yoursite.com/2018/06/12/dubbo-spi%E7%89%B9%E6%80%A7/"/>
    <id>http://yoursite.com/2018/06/12/dubbo-spi特性/</id>
    <published>2018-06-12T05:21:50.000Z</published>
    <updated>2018-06-12T09:40:20.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JAVA-SPI浅析"><a href="#JAVA-SPI浅析" class="headerlink" title="JAVA SPI浅析"></a>JAVA SPI浅析</h3><p>spi最典型的实例应用就是jdbc4.0,在jdbc4.0之前我们加载一个jdbc驱动通过<code>Class.forName</code>加载驱动,例子如下:  </p><pre><code>Class.forName(&quot;com.mysql.jdbc.Driver&quot;);  Connection conn = DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306&quot;test&quot;, &quot;root&quot;, &quot;123456&quot;);  Statement stmt = conn.createStatement();  ResultSet rs = stmt.executeQuery(&quot;select * from Users&quot;);  </code></pre><p>上面是jdbc4.0 加载驱动方式,<code>Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</code>这里虽是加载mysql的driver,但是无论是oracle还是其它的jdbc驱动包，它们的原理都是spi机制。我们来看<code>java.sql.Driver</code>接口,这个接口在jdk中没有实现,这个接口是具体的个个数据厂商实现的.</p><p><strong><em>Dubbo扩展点记载从JDK标准的SPI(Service Provider Interface)扩展点发现机制加强而来.</em></strong></p><h4 id="Dubbo改进了JDK标准SPI的几个问题-核心类-ExtensionLoader"><a href="#Dubbo改进了JDK标准SPI的几个问题-核心类-ExtensionLoader" class="headerlink" title="Dubbo改进了JDK标准SPI的几个问题  核心类(ExtensionLoader)"></a>Dubbo改进了JDK标准SPI的几个问题  核心类(ExtensionLoader)</h4><ul><li>JDK标准的SPI会一次性实例化扩展点所有实例,如果扩展实现初始化很耗时,但是如果没有用上也会被加载,这是非常浪费资源的.</li><li>如果扩展加载失败了,启动不会报错,而在使用时会报不支持错误,比如: JDK 标准的<br>ScriptEngine，通过 getName() 获取脚本类型的名称，但如果RubyScriptEngine 因为所依赖的 jruby.jar 不存在，导致 RubyScriptEngine 类加载失败，这个失败原因被吃掉了，和 ruby 对应不起来，当用户执行 ruby脚本时,会报不支持ruby，而不是真正失败的原因。</li><li>增加了对扩展点 IoC 和 AOP 的支持一个扩展点可以直接 setter 注入其它扩展点。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;JAVA-SPI浅析&quot;&gt;&lt;a href=&quot;#JAVA-SPI浅析&quot; class=&quot;headerlink&quot; title=&quot;JAVA SPI浅析&quot;&gt;&lt;/a&gt;JAVA SPI浅析&lt;/h3&gt;&lt;p&gt;spi最典型的实例应用就是jdbc4.0,在jdbc4.0之前我们加载一个j
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java -spi" scheme="http://yoursite.com/tags/java-spi/"/>
    
  </entry>
  
  <entry>
    <title>测试文章</title>
    <link href="http://yoursite.com/2018/06/11/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <id>http://yoursite.com/2018/06/11/测试文章/</id>
    <published>2018-06-11T06:06:32.000Z</published>
    <updated>2018-06-11T07:18:56.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="测试文章" scheme="http://yoursite.com/categories/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    
    
  </entry>
  
</feed>
